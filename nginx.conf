		#运行nginx所在的用户名和用户组
		#user  root root;
		#启动进程数
		worker_processes 8;
		#全局错误日志及PID文件
		error_log  /usr/local/nginx/logs/nginx_error.log  crit;
		pid        /usr/local/nginx/nginx.pid;
		#Specifies the value for maximum file descriptors that can be opened by this process.
		worker_rlimit_nofile 65535;
		#工作模式及连接数上限
		events{
			use epoll;
			worker_connections 65535;
		}
		#设定http服务器，利用它的反向代理功能提供负载均衡支持
		http{
			#设定mime类型
			include       mime.types;
			default_type  application/octet-stream;
			include /usr/local/nginx/conf/proxy.conf;
			#charset  gb2312;
			#设定请求缓冲   
			server_names_hash_bucket_size 128;
			client_header_buffer_size 32k;
			large_client_header_buffers 4 32k;
			sendfile on;
			tcp_nopush     on;
			keepalive_timeout 60;
			tcp_nodelay on;
			#定义访问日志的写入格式
			log_format  access  '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" $http_x_forwarded_for';
			access_log  /usr/local/nginx/logs/localhost.log access;#设定访问日志的存放路径
			#  fastcgi_connect_timeout 300;
			#  fastcgi_send_timeout 300;
			#  fastcgi_read_timeout 300;
			#  fastcgi_buffer_size 64k;
			#  fastcgi_buffers 4 64k;
			#  fastcgi_busy_buffers_size 128k;
			#  fastcgi_temp_file_write_size 128k;
			#  gzip on;
			#  gzip_min_length  1k;
			#  gzip_buffers     4 16k;
			#  gzip_http_version 1.0;
			#  gzip_comp_level 2;
			#  gzip_types       text/plain application/x-javascript text/css application/xml;
			#  gzip_vary on;
			#limit_zone  crawler  $binary_remote_addr  10m;
			###禁止通过ip访问站点
			#server {
			#	listen 8000 default;
			#	server_name _;
			#	server_name soolr.com www.soolr.com;
			#	return 500;
			#}
			server {
		        ### server port and name ###
		        listen          443 ssl;
		        server_name    soolr.com www.soolr.com;
		        
		        ssl on;
		 			
		        ### SSL log files ###
		        access_log      logs/ssl-access.log;
		        error_log       logs/ssl-error.log;
		 
		        ### SSL cert files ###
		        ssl_certificate      /var/www/soolr.com/www.soolr.com_bundle.crt;
		        ssl_certificate_key  /var/www/soolr.com/www.soolr.com.key;
		        ### Add SSL specific settings here ###
		        keepalive_timeout    60;
		 
		        ###  Limiting Ciphers ########################
		        # Uncomment as per your setup
		        #ssl_ciphers HIGH:!ADH;
		        #ssl_perfer_server_ciphers on;
		        #ssl_protocols SSLv3;
		        ##############################################
		        ### We want full access to SSL via backend ###
		        location / {
		                index index.html index.htm;
										proxy_pass http://localhost:8080;#转向tomcat处理
										root /var/www/soolr.com/soolr;
										expires      30d;
						}		
							
		    }
			server{
				listen       80;
				server_name  soolr.com www.soolr.com;
				#rewrite ^   https://$host$server_name$request_uri? permanent;
				return 301 https://www.soolr.com;

				#index index.html index.htm;#设定访问的默认首页地址
				#root /var/www/soolr.com/soolr;#设定网站的资源存放路径
				##limit_conn   crawler  20;   
				#location / {
				#	index index.html index.htm;
				#	proxy_pass http://localhost:8080;#转向tomcat处理
				#	root /var/www/soolr.com/soolr;
				#	expires      30d;
				#}
				#	location ~ .*\.(js|css)?$
				#{
				#	expires      1h;
				#}  
			} 
		}
